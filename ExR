load("C:/R/Resultats/EX_R.RData")
load files ("")
View(voteRochefort)
save file("EX_R")
savehistory("ex_R")
View(voteSaintes_Candidats2_3)
Requete <- voteSaintes_Candidats2_3[voteSaintes_Candidats2_3=='MacronSup30']
view (requete)
requete_M5<-(requete)
View (requete)
View (Requete)
install.packages("ggplot2")
library(ggplot2)
col1 <- c("Macron", "Melenchon", "Le Pen", "Pecresse")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteCandidats1_4$Part_Macron), mean(voteCandidats1_4$Part_Melenchon), mean(voteCandidats1_4$Part_LePen),
mean(voteCandidats1_4$Part_Pecresse))
# On crée le tableau de données du graphique en spécifiant que les valeurs du graph correspondent à « col2 »
data <- data.frame(group=col1, value=col2)
# On crée le graphique :
ggplot(data= data, aes(x=reorder(group, -value), y=value, fill=group)) +
geom_bar(stat="identity")+
# On ajoute les valeurs de % de vote sur le graph et on personnalise les couleurs
geom_text(aes(label=round(value, digits=2)), vjust=1.6, color="white", size=3.5)+
scale_fill_manual(values = c("#0a3895", "#b831f3","#f33157", "#6091f6"))
savehistory(files ="ExR")
savehistory(files ="8888")
savehistory(files =".......")
savehistory(file ="ExR")
col1 <- c("Macron", "Melenchon", "Le Pen", "Pecresse")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteCandidats1_4$Part_Macron), mean(voteCandidats1_4$Part_Melenchon), mean(voteCandidats1_4$Part_LePen),
mean(voteCandidats1_4$Part_Pecresse))
# On crée le tableau de données du graphique en spécifiant que les valeurs du graph correspondent à « col2 »
data <- data.frame(group=col1, value=col2)
# On crée le graphique :
ggplot(data, aes(x="", y=value , fill=group)) +
geom_bar(stat="identity", width=1) +
geom_col() +
coord_polar("y", start=0) + # coord_polar permet de convertir des barres en cercles
# On ajoute les valeurs de % de vote sur le graph et on personnalise les couleurs
geom_text(aes(label = round(value, digits=2)), position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = c("#0a3895", "#b831f3", "#f33157", "#6091f6"))
View(resultats_pres2022)
VoteLarochelle <- resultats_pres2022[Libelle == 'La Rochelle']
voteLarochelle <- resultats_pres2022 [resultats_pres2022$Libelle =='La Rochelle'
voteRochefort <- resultats_pres2022 [resultats_pres2022$Libelle =='Rochefort'ù
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Libelle =='La Rochelle'& resultats_pres2022$Code_dep == '17']
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Libelle =='La Rochelle'& resultats_pres2022$Code_dep == '17']
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Code_com=='300'& resultats_pres2022$Code_dep == '17']
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Libelle=='La Rochelle'& resultats_pres2022$Code_dep == '17']
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Libelle =='La Rochelle,]
& resultats_pres2022$Code_dep == '17'
voteLaRochelle<- resultats_pres2022 [resultats_pres2022$Libelle =='La Rochelle',]
View(voteLaRochelle)
col1 <- c("Hidalgo", "Melenchon","Jadot")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteCandidats1_4$Part_Hidalgo), mean(voteCandidats1_4$Part_Melenchon), mean(voteCandidats1_4$Part_Jadot),)
col1 <- c("Hidalgo", "Melenchon","Jadot")
>
View(voteLaRochelle)
col1 <- c("Hidalgo", "Melenchon", "Jadot")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteLaRochelle$Part_Hidalgo), mean(voteLaRochelle$Part_Melenchon), mean(voteCandidats1_4$Part_Jadot))
# On crée le tableau de données du graphique en spécifiant que les valeurs du graph correspondent à « col2 »
data <- data.frame(group=col1, value=col2)
# On crée le graphique :
ggplot(data, aes(x="", y=value , fill=group)) +
geom_bar(stat="identity", width=1) +
geom_col() +
coord_polar("y", start=0) + # coord_polar permet de convertir des barres en cercles
# On ajoute les valeurs de % de vote sur le graph et on personnalise les couleurs
geom_text(aes(label = round(value, digits=2)), position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = c("#008000", "#f33157", "#fd6c9e"))
col1 <- c("Hidalgo", "Melenchon", "Jadot")
col1 <- c("Hidalgo", "Melenchon", "Jadot")
>
col1 <- c("Hidalgo", "Melenchon", "Jadot")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteLaRochelle$Part_Hidalgo), mean(voteLaRochelle$Part_Melenchon), mean(voteLaRochelle$Part_Jadot))
# On crée le tableau de données du graphique en spécifiant que les valeurs du graph correspondent à « col2 »
data <- data.frame(group=col1, value=col2)
# On crée le graphique :
ggplot(data, aes(x="", y=value , fill=group)) +
geom_bar(stat="identity", width=1) +
geom_col() +
coord_polar("y", start=0) + # coord_polar permet de convertir des barres en cercles
# On ajoute les valeurs de % de vote sur le graph et on personnalise les couleurs
geom_text(aes(label = round(value, digits=2)), position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = c("#fd6c9e", "#f33157", "#008000"))
savehistory(file ="ExR")
voteRochefort_Candidats1_4 <- voteRochefort [ , c("Code_BV", "Part_Macron", "Part_LePen", "Part_Melenchon",
"Part_Pecresse")]
# On reformatte le tableau de données (nécessite le package tidyr)
reformat <-
voteRochefort_Candidats1_4 %>% pivot_longer(cols=c("Part_Macron", "Part_LePen", "Part_Melenchon", "Part_Pecresse"),
names_to='candidats', values_to='parts')
install.packages("tidyr")
library(tidyr)
voteRochefort_Candidats1_4 <- voteRochefort [ , c("Code_BV", "Part_Macron", "Part_LePen", "Part_Melenchon",
"Part_Pecresse")]
# On reformatte le tableau de données (nécessite le package tidyr)
reformat <-
voteRochefort_Candidats1_4 %>% pivot_longer(cols=c("Part_Macron", "Part_LePen", "Part_Melenchon", "Part_Pecresse"),
names_to='candidats', values_to='parts')
# On réalise autant de graphs qu’il existe de Bureaux de vote (« facet_wrap »)
ggplot(data=reformat, aes(x=candidats,y=parts,fill=candidats)) +
geom_bar(stat="identity") +
facet_wrap(~Code_BV) +
ggtitle("Parts de vote dans les BV de Rochefort") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90)) +
scale_fill_manual(values = c("#0a3895", "#b831f3","#f33157", "#6091f6"))
voteRoyan<- resultats_pres2022 [resultats_pres2022$Libelle =='Royan',]
View(voteRoyan)
View(voteRochefort_Candidats1_4)
voteRoyan_Candidats1_4 <- voteRoyan [ , c("Code_BV", "Part_Macron", "Part_LePen", "Part_Melenchon","Part_Pecresse")]
# On reformatte le tableau de données (nécessite le package tidyr)
reformat <-
voteRochefort_Candidats1_4 %>% pivot_longer(cols=c("Part_Macron", "Part_LePen", "Part_Melenchon", "Part_Pecresse"), names_to='candidats', values_to='parts')
# On réalise autant de graphs qu’il existe de Bureaux de vote (« facet_wrap »)
ggplot(data=reformat, aes(x=candidats,y=parts,fill=candidats)) +
geom_bar(stat="identity") +
facet_wrap(~Code_BV) +
ggtitle("Parts de vote dans les BV de Rochefort") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90)) +
scale_fill_manual(values = c("#0a3895", "#b831f3","#f33157", "#6091f6"))
voteRoyan_Candidats1_4 <- voteRoyan [ , c("Code_BV", "Part_Macron", "Part_LePen", "Part_Melenchon", "Part_Pecresse")]
# On reformatte le tableau de données (nécessite le package tidyr)
reformat <-
voteRoyan_Candidats1_4 %>% pivot_longer(cols=c("Part_Macron", "Part_LePen", "Part_Melenchon", "Part_Pecresse"),names_to='candidats', values_to='parts')
coord_polar("y", start=0) +
# On réalise autant de graphs qu’il existe de Bureaux de vote (« facet_wrap »)
ggplot(data=reformat, aes(x=candidats,y=parts,fill=candidats)) +
geom_bar(stat="identity") +
facet_wrap(~Code_BV) +
ggtitle("Parts de vote dans les BV de Royan") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90)) +
scale_fill_manual(values = c("#0a3895", "#b831f3","#f33157", "#6091f6"))
rlang::last_trace()
voteRoyan_Candidats1_4 <- voteRoyan [ , c("Code_BV", "Part_Macron", "Part_LePen", "Part_Melenchon",
"Part_Pecresse")]
# On reformatte le tableau de données (nécessite le package tidyr)
reformat <-
voteRoyan_Candidats1_4 %>% pivot_longer(cols=c("Part_LePen", "Part_Macron", "Part_Melenchon", "Part_Pecresse"), names_to='candidats', values_to='parts')
# On réalise autant de graphs qu’il existe de Bureaux de vote (« facet_wrap »)
ggplot(data=reformat, aes(x=candidats,y=parts,fill=candidats)) +
geom_bar(stat="identity") + geom_col() +
coord_polar("y", start=0) +
facet_wrap(~Code_BV) +
ggtitle("Parts de vote dans les BV de Royan") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90)) +
scale_fill_manual(values = c("#0a3895", "#b831f3","#f33157", "#6091f6"))
savehistory(fille ='R')
savehistory(file ="ExR")
db <- "postgres"
db_host <- "localhost"
db_port <- "5432"
db_user <- "postgres"
db_pass <- "postgres"
conn <- dbConnect(RPostgres::Postgres(),dbname = db,host = db_host,port = db_port,user = db_user,password = db_pass)
View(reformat)
col1 <- c("Hidalgo", "Melenchon", "Jadot")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteLaRochelle$Part_Hidalgo), mean(voteCandidats1_4$Part_Melenchon), mean(voteCandidats1_4$Part_Jadot)
# On crée le tableau de données du graphique en spécifiant que les valeurs du graph correspondent à « col2 »
data <- data.frame(group=col1, value=col2)
col1 <- c("Macron", "Melenchon", "Le Pen", "Pecresse")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteLaRochelle$Part_Hidalgo), mean(voteCandidats1_4$Part_Melenchon), mean(voteCandidats1_4$Part_Jadot))
data <- data.frame(group=col1, value=col2)
col1 <- c("Hidalgo", "Melenchon", "Jadot")
# On reprend les % de vote issus de l’extraction précédente, dans une variable nommée « col2 »
col2 <- c(mean(voteLaRochelle$Part_Hidalgo), mean(voteLaRochelle$Part_Melenchon), mean(voteLaRochelle$Part_Jadot))
data <- data.frame(group=col1, value=col2)
# On crée le graphique :
ggplot(data, aes(x="", y=value , fill=group)) +
geom_bar(stat="identity", width=1) +
geom_col() +
coord_polar("y", start=0) + # coord_polar permet de convertir des barres en cercles
# On ajoute les valeurs de % de vote sur le graph et on personnalise les couleurs
geom_text(aes(label = round(value, digits=2)), position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = c("#fd6c9e", "#f33157", "#008000"))
db <- "postgres"
db_host <- "localhost"
db_port <- "5432"
db_user <- "postgres"
db_pass <- "M0a1d3t5"
conn <- dbConnect(RPostgres::Postgres(),dbname = db,host = db_host,port = db_port,user = db_user,password = db_pass)
install.packages(c("RPostgres", "RPostgreSQL", "DBI"))
library(DBI)
library(RPostgres)
library(RPostgreSQL)
db <- "postgres"
db_host <- "localhost"
db_port <- "5432"
db_user <- "postgres"
db_pass <- "M0a1d3t5"
conn <- dbConnect(RPostgres::Postgres(),dbname = db,host = db_host,port = db_port,user = db_user,password = db_pass)
conn
requete <- dbGetQuery(conn, 'SELECT * from php.form;')
title: "Rapport R"
#test
title: "Rapport R"
#test
title: "Rapport R"
knitr::opts_chunk$set(echo = FALSE)
title: "Rapport R"
```{r setup, include=FALSE, warning=FALSE}
## Parts de vote des principaux partis de gauche à l'échelle de la ville de La Rochelle
```{r echo=FALSE, message=FALSE, warning=FALSE}
---
title: "export"
title: "Rapport R"
#test
title "Rapport R"
---
title: "export"
knitr::opts_chunk$set(echo = FALSE)
savehistory(file ="ExR")
